{"version":3,"sources":["../../src/util/theme.ts"],"names":[],"mappings":";;;;;;QAKM,K,GAAA,K;QAoDA,a,GAAA,a;;;;AAxDN;;IAAY,I;;AACZ;;IAAY,G;;;;AAGN,SAAA,KAAA,CAAiB,KAAjB,EAAoC;AACxC,QAAM,SAAS,OAAO,IAAP,CAAY,KAAZ,CAAf;AACA,QAAM,cAAmB,EAAzB;AAEA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,OAAO,MAA3B,EAAmC,EAAE,CAArC,EAAwC;AACtC,YAAM,OAAO,OAAO,CAAP,CAAb;AACA,YAAM,QAAQ,MAAM,IAAN,CAAd;AAEA,oBAAY,IAAZ,IAAoB,4BAAW,KAAX,CAApB;AACD;AAED,WAAO,WAAP;AACD;AAED;;;AAGO,IAAM,sCAAe,SAAf,YAAe,CAAC,IAAD,EAAe,KAAf,EAAqC;AAC/D,QAAM,MAAM,0BAAS,KAAT,CAAZ;AACA,mBACC,IADD,gCAEoB,GAFpB,sCAGgB,GAHhB,0BAKC,IALD,2BAMS,GANT,0BAQC,IARD,wBASC,IATD,0CAUe,GAVf;AAYD,CAdM;AAgBP;;;AAGO,IAAM,4CAAkB,SAAlB,eAAkB,CAAC,IAAD,EAAe,KAAf,EAA2B,IAA3B,EAAuD,CAAvD,EAA4E;AACzG,QAAM,MAAM,0BAAS,KAAT,CAAZ;AACA,mBACC,IADD,SACS,IADT,SACiB,CADjB,gCAEoB,GAFpB,sCAGgB,GAHhB,0BAKC,IALD,qBAKqB,IALrB,SAK6B,CAL7B,qBAMS,GANT,0BAQC,IARD,qBAQqB,IARrB,SAQ6B,CAR7B,kBASC,IATD,qBASqB,IATrB,SAS6B,CAT7B,oCAUe,GAVf;AAYD,CAdM;AAgBD,SAAA,aAAA,CAAyB,IAAzB,EAAuC,KAAvC,EAAiD;AACrD,QAAM,SAAS,MAAM,EAAN,CAAf;AACA,WAAO,CAAP,IAAY,aAAa,IAAb,EAAmB,KAAnB,CAAZ;AAEA,SAAK,IAAI,IAAI,CAAR,EAAW,IAAI,CAApB,EAAuB,KAAK,CAA5B,EAA+B,EAAE,CAAF,EAAK,EAAE,CAAtC,EAAyC;AACvC,eAAO,CAAP,IAAY,gBAAgB,IAAhB,EAAsB,QAAQ,KAAR,EAAe,CAAf,CAAtB,EAAyC,SAAzC,EAAoD,CAApD,CAAZ;AACD;AAED,SAAK,IAAI,KAAI,CAAb,EAAgB,MAAK,CAArB,EAAwB,EAAE,EAA1B,EAA6B;AAC3B,eAAO,KAAI,CAAX,IAAgB,gBAAgB,IAAhB,EAAsB,OAAO,KAAP,EAAc,EAAd,CAAtB,EAAwC,QAAxC,EAAkD,EAAlD,CAAhB;AACD;AAED,WAAO,MAAP;AACD;AAED,SAAA,OAAA,CAAkB,KAAlB,EAA8B,MAA9B,EAA4C;AAC1C,QAAM,MAAM,IAAI,OAAJ,CAAY,KAAK,KAAL,CAAW,KAAX,CAAZ,CAAZ;AACA,QAAI,CAAJ,IAAS,IAAI,CAAJ,IAAS,SAAS,EAA3B;AACA,WAAO,KAAK,OAAL,CAAa,IAAI,KAAJ,CAAU,GAAV,CAAb,CAAP;AACD;AAED,SAAA,MAAA,CAAiB,KAAjB,EAA6B,MAA7B,EAA2C;AACzC,QAAM,MAAM,IAAI,OAAJ,CAAY,KAAK,KAAL,CAAW,KAAX,CAAZ,CAAZ;AACA,QAAI,CAAJ,IAAS,IAAI,CAAJ,IAAS,SAAS,EAA3B;AACA,WAAO,KAAK,OAAL,CAAa,IAAI,KAAJ,CAAU,GAAV,CAAb,CAAP;AACD","sourcesContent":["import { colorToInt, intToHex, RGB } from './colorUtils'\nimport * as sRGB from './color/transformSRGB'\nimport * as LAB from './color/transformCIELAB'\nimport { VuetifyTheme } from 'types'\n\nexport function parse (theme: VuetifyTheme): VuetifyTheme {\n  const colors = Object.keys(theme)\n  const parsedTheme: any = {}\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    parsedTheme[name] = colorToInt(value)\n  }\n\n  return parsedTheme\n}\n\n/**\n * Generate the CSS for a base color (.primary)\n */\nexport const genBaseColor = (name: string, value: RGB): string => {\n  const rgb = intToHex(value)\n  return `\n.${name} {\n  background-color: ${rgb} !important;\n  border-color: ${rgb} !important;\n}\n.${name}--text {\n  color: ${rgb} !important;\n}\n.${name}--text input,\n.${name}--text textarea {\n  caret-color: ${rgb} !important;\n}`\n}\n\n/**\n * Generate the CSS for a variant color (.primary.darken-2)\n */\nexport const genVariantColor = (name: string, value: RGB, type: 'darken' | 'lighten', n: number): string => {\n  const rgb = intToHex(value)\n  return `\n.${name}.${type}-${n} {\n  background-color: ${rgb} !important;\n  border-color: ${rgb} !important;\n}\n.${name}--text.text--${type}-${n} {\n  color: ${rgb} !important;\n}\n.${name}--text.text--${type}-${n} input,\n.${name}--text.text--${type}-${n} textarea {\n  caret-color: ${rgb} !important;\n}`\n}\n\nexport function genVariations (name: string, value: RGB): RGB[] {\n  const values = Array(10)\n  values[0] = genBaseColor(name, value)\n\n  for (let i = 1, n = 5; i <= 5; ++i, --n) {\n    values[i] = genVariantColor(name, lighten(value, n), 'lighten', n)\n  }\n\n  for (let i = 1; i <= 4; ++i) {\n    values[i + 5] = genVariantColor(name, darken(value, i), 'darken', i)\n  }\n\n  return values\n}\n\nfunction lighten (value: RGB, amount: number): RGB {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] + amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n\nfunction darken (value: RGB, amount: number): RGB {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n"],"sourceRoot":""}