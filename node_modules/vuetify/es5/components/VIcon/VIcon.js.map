{"version":3,"sources":["../../../src/components/VIcon/VIcon.ts"],"names":[],"mappings":"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","sourcesContent":["import '../../stylus/components/_icons.styl'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport Colorable from '../../mixins/colorable'\n\n// Util\nimport {\n  convertToUnit,\n  getObjectValueByPath,\n  keys\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\nimport mixins from '../../util/mixins'\n\nenum SIZE_MAP {\n  small = '16px',\n  default = '24px',\n  medium = '28px',\n  large = '36px',\n  xLarge = '40px'\n}\n\nfunction isFontAwesome5 (iconType: string): boolean {\n  return ['fas', 'far', 'fal', 'fab'].some(val => iconType.includes(val))\n}\n\nconst ICONS_PREFIX = '$vuetify.icons.'\n\n// This remaps internal names like '$vuetify.icons.cancel' to the current name\n// for that icon. Note the parent component is needed for $vuetify because\n// VIcon is a functional component. This function only looks at the\n// immediate parent, so it won't remap for a nested functional components.\nfunction remapInternalIcon (parent: object, iconName: string): string {\n  if (!iconName.startsWith(ICONS_PREFIX)) {\n    // return original icon name unchanged\n    return iconName\n  }\n\n  // Now look up icon indirection name, e.g. '$vuetify.icons.cancel':\n  return getObjectValueByPath(parent, iconName) || iconName\n}\n\nconst addTextColorClassChecks = Colorable.options.methods.addTextColorClassChecks\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-icon',\n\n  functional: true,\n\n  props: {\n    // TODO: inherit these\n    color: String,\n    dark: Boolean,\n    light: Boolean,\n\n    disabled: Boolean,\n    large: Boolean,\n    left: Boolean,\n    medium: Boolean,\n    right: Boolean,\n    size: {\n      type: [Number, String]\n    },\n    small: Boolean,\n    xLarge: Boolean\n  },\n\n  render (h, { props, data, parent, listeners = {}, children = [] }): VNode {\n    const { small, medium, large, xLarge } = props\n    const sizes = { small, medium, large, xLarge }\n    const explicitSize = keys(sizes).find(key => sizes[key] && !!key)\n    const fontSize = (explicitSize && SIZE_MAP[explicitSize]) || convertToUnit(props.size)\n\n    const newChildren: VNodeChildren = []\n\n    if (fontSize) data.style = { fontSize, ...data.style }\n\n    let iconName = ''\n    if (children.length) iconName = children[0].text!\n    // Support usage of v-text and v-html\n    else if (data.domProps) {\n      iconName = data.domProps.textContent ||\n        data.domProps.innerHTML ||\n        iconName\n\n      // Remove nodes so it doesn't\n      // overwrite our changes\n      delete data.domProps.textContent\n      delete data.domProps.innerHTML\n    }\n\n    // Remap internal names like '$vuetify.icons.cancel' to the current name for that icon\n    iconName = remapInternalIcon(parent, iconName)\n\n    let iconType = 'material-icons'\n    // Material Icon delimiter is _\n    // https://material.io/icons/\n    const delimiterIndex = iconName.indexOf('-')\n    const isCustomIcon = delimiterIndex > -1\n\n    if (isCustomIcon) {\n      iconType = iconName.slice(0, delimiterIndex)\n\n      if (isFontAwesome5(iconType)) iconType = ''\n      // Assume if not a custom icon\n      // is Material Icon font\n    } else newChildren.push(iconName)\n\n    data.attrs = data.attrs || {}\n    if (!('aria-hidden' in data.attrs)) {\n      data.attrs['aria-hidden'] = true\n    }\n\n    const classes = {\n      ...(props.color && addTextColorClassChecks.call(props, {}, props.color)),\n      'v-icon--disabled': props.disabled,\n      'v-icon--left': props.left,\n      'v-icon--link': listeners.click || listeners['!click'],\n      'v-icon--right': props.right,\n      'theme--dark': props.dark,\n      'theme--light': props.light\n    }\n\n    // Order classes\n    // * Component class\n    // * Vuetify classes\n    // * Icon Classes\n    data.staticClass = [\n      'v-icon',\n      data.staticClass,\n      Object.keys(classes).filter(k => classes[k]).join(' '),\n      iconType,\n      isCustomIcon ? iconName : null\n    ].filter(val => !!val).join(' ').trim()\n\n    return h('i', data, newChildren)\n  }\n})\n"],"sourceRoot":""}