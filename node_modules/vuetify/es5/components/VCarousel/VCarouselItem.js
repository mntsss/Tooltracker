'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // Components

// Mixins


var _VJumbotron = require('../VJumbotron');

var _VJumbotron2 = _interopRequireDefault(_VJumbotron);

var _registrable = require('../../mixins/registrable');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* @vue/component */
exports.default = {
    name: 'v-carousel-item',
    mixins: [(0, _registrable.inject)('carousel', 'v-carousel-item', 'v-carousel')],
    inheritAttrs: false,
    props: {
        transition: {
            type: String,
            default: 'tab-transition'
        },
        reverseTransition: {
            type: String,
            default: 'tab-reverse-transition'
        }
    },
    data: function data() {
        return {
            active: false,
            reverse: false
        };
    },

    computed: {
        computedTransition: function computedTransition() {
            return this.reverse === !this.$vuetify.rtl ? this.reverseTransition : this.transition;
        }
    },
    mounted: function mounted() {
        this.carousel.register(this._uid, this.open);
    },
    beforeDestroy: function beforeDestroy() {
        this.carousel.unregister(this._uid, this.open);
    },

    methods: {
        open: function open(id, reverse) {
            this.active = this._uid === id;
            this.reverse = reverse;
        }
    },
    render: function render(h) {
        var item = h(_VJumbotron2.default, {
            props: _extends({}, this.$attrs, {
                height: '100%'
            }),
            on: this.$listeners,
            directives: [{
                name: 'show',
                value: this.active
            }]
        }, this.$slots.default);
        return h('transition', { props: { name: this.computedTransition } }, [item]);
    }
};
//# sourceMappingURL=VCarouselItem.js.map