{"version":3,"sources":["../../../../src/components/VTabs/mixins/tabs-computed.js"],"names":[],"mappings":";;;;;;;;;;AAKA;kBACe;AACb,cAAU;AACR,mBADQ,yBACG;AAAA;;AACT,mBAAO,KAAK,IAAL,CAAU,SAAV,CAAoB,UAAC,GAAD,EAAM,KAAN,EAAe;AACxC,oBAAM,KAAK,IAAI,MAAJ,KAAe,GAAf,GAAqB,KAArB,GAA6B,IAAI,MAA5C;AACA,uBAAO,OAAO,MAAK,SAAnB;AACD,aAHM,CAAP;AAID,SANO;AAOR,iBAPQ,uBAOC;AACP,gBAAI,CAAC,KAAK,IAAL,CAAU,MAAf,EAAuB,OAAO,SAAP;AAEvB,mBAAO,KAAK,IAAL,CAAU,KAAK,WAAf,CAAP;AACD,SAXO;AAYR,uBAZQ,6BAYO;AACb,mBAAO,KAAK,MAAL,GAAc;AACnB,wBAAW,SAAS,KAAK,MAAd,EAAsB,EAAtB,CAAX;AADmB,aAAd,GAEH,IAFJ;AAGD,SAhBO;AAiBR,iBAjBQ,uBAiBC;AACP,mBAAO,CAAC,KAAK,UAAL,IAAmB,CAAC,KAAK,QAA1B,KAAuC,KAAK,aAAnD;AACD,SAnBO;;AAoBR,oBAAY;AACV,eADU,iBACP;AACD,uBAAO,KAAK,SAAZ;AACD,aAHS;AAIV,eAJU,eAIL,GAJK,EAIF;AACN,oBAAI,KAAK,UAAL,KAAoB,GAAxB,EAA6B;AAE7B,qBAAK,SAAL,GAAiB,GAAjB;AACA,qBAAK,KAAL,CAAW,OAAX,EAAoB,GAApB;AACD;AATS,SApBJ;AA+BR,gBA/BQ,sBA+BA;AACN,mBAAO,KAAK,QAAL,CAAc,UAAd,CAAyB,KAAzB,GAAiC,KAAK,gBAA7C;AACD,SAjCO;AAkCR,oBAlCQ,0BAkCI;AACV,mBAAO;AACL,sBAAS,KAAK,UAAd,OADK;AAEL,4BAAY,KAAK,UAAL,IAAmB,IAAnB,GAA0B,IAA1B,GAAiC,MAFxC;AAGL,uBAAU,KAAK,WAAf;AAHK,aAAP;AAKD,SAxCO;AAyCR,cAzCQ,oBAyCF;AACJ,mBAAO,KAAK,SAAL,GACH,KAAK,SAAL,CAAe,MADZ,GAEH,IAFJ;AAGD;AA7CO;AADG,C","sourcesContent":["/**\n * Tabs computed\n *\n * @mixin\n */\n/* @vue/component */\nexport default {\n  computed: {\n    activeIndex () {\n      return this.tabs.findIndex((tab, index) => {\n        const id = tab.action === tab ? index : tab.action\n        return id === this.lazyValue\n      })\n    },\n    activeTab () {\n      if (!this.tabs.length) return undefined\n\n      return this.tabs[this.activeIndex]\n    },\n    containerStyles () {\n      return this.height ? {\n        height: `${parseInt(this.height, 10)}px`\n      } : null\n    },\n    hasArrows () {\n      return (this.showArrows || !this.isMobile) && this.isOverflowing\n    },\n    inputValue: {\n      get () {\n        return this.lazyValue\n      },\n      set (val) {\n        if (this.inputValue === val) return\n\n        this.lazyValue = val\n        this.$emit('input', val)\n      }\n    },\n    isMobile () {\n      return this.$vuetify.breakpoint.width < this.mobileBreakPoint\n    },\n    sliderStyles () {\n      return {\n        left: `${this.sliderLeft}px`,\n        transition: this.sliderLeft != null ? null : 'none',\n        width: `${this.sliderWidth}px`\n      }\n    },\n    target () {\n      return this.activeTab\n        ? this.activeTab.action\n        : null\n    }\n  }\n}\n"],"sourceRoot":""}