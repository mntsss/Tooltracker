{"version":3,"sources":["../../src/mixins/button-group.ts"],"names":[],"mappings":"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","sourcesContent":["import mixins from '../util/mixins'\n\nimport { provide as RegistrableProvide } from './registrable'\nimport { consoleWarn } from '../util/console'\n\nimport VBtn from '../components/VBtn/VBtn'\n\ntype VBtnInstance = InstanceType<typeof VBtn>\n\n/* @vue/component */\nexport default mixins(RegistrableProvide('buttonGroup')).extend({\n  name: 'button-group',\n\n  props: {\n    mandatory: Boolean\n  },\n\n  data: () => ({\n    buttons: [] as VBtnInstance[],\n    listeners: [] as (() => void)[],\n    isDestroying: false\n  }),\n\n  watch: {\n    buttons: 'update'\n  },\n\n  mounted () {\n    this.update()\n  },\n\n  beforeDestroy () {\n    this.isDestroying = true\n  },\n\n  methods: {\n    /** @abstract */\n    isSelected (i: number): boolean {\n      throw new Error('Not implemented !')\n    },\n    /** @abstract */\n    updateValue (i: number): void {\n      throw new Error('Not implemented !')\n    },\n    /** @abstract */\n    updateAllValues (): void {\n      throw new Error('Not implemented !')\n    },\n    getValue (i: number): any {\n      if (this.buttons[i].value != null) {\n        return this.buttons[i].value\n      }\n\n      return i\n    },\n    update () {\n      const selected = []\n\n      for (let i = 0; i < this.buttons.length; i++) {\n        const elm = this.buttons[i].$el\n        const button = this.buttons[i]\n\n        elm.removeAttribute('data-only-child')\n\n        if (this.isSelected(i)) {\n          !button.to && (button.isActive = true)\n          selected.push(i)\n        } else {\n          !button.to && (button.isActive = false)\n        }\n      }\n\n      if (selected.length === 1) {\n        this.buttons[selected[0]].$el.setAttribute('data-only-child', 'true')\n      }\n\n      this.ensureMandatoryInvariant(selected.length > 0)\n    },\n    register (button: VBtnInstance): void {\n      const index = this.buttons.length\n      this.buttons.push(button)\n      this.listeners.push(this.updateValue.bind(this, index))\n      button.$on('click', this.listeners[index])\n    },\n    unregister (buttonToUnregister: VBtnInstance): void {\n      // Basic cleanup if we're destroying\n      if (this.isDestroying) {\n        const index = this.buttons.indexOf(buttonToUnregister)\n        if (index !== -1) {\n          buttonToUnregister.$off('click', this.listeners[index])\n        }\n        return\n      }\n\n      this.redoRegistrations(buttonToUnregister)\n    },\n    redoRegistrations (buttonToUnregister: VBtnInstance): void {\n      let selectedCount = 0\n\n      const buttons = []\n      for (let index = 0; index < this.buttons.length; ++index) {\n        const button = this.buttons[index]\n        if (button !== buttonToUnregister) {\n          buttons.push(button)\n          selectedCount += Number(this.isSelected(index))\n        }\n\n        button.$off('click', this.listeners[index])\n      }\n\n      this.buttons = []\n      this.listeners = []\n\n      for (let index = 0; index < buttons.length; ++index) {\n        this.register(buttons[index])\n      }\n\n      this.ensureMandatoryInvariant(selectedCount > 0)\n      this.updateAllValues && this.updateAllValues()\n    },\n    ensureMandatoryInvariant (hasSelectedAlready: boolean): void {\n      // Preserve the mandatory invariant by selecting the first tracked button, if needed\n\n      if (!this.mandatory || hasSelectedAlready) return\n\n      if (!this.listeners.length) {\n        consoleWarn('There must be at least one v-btn child if the mandatory property is true.', this)\n        return\n      }\n\n      this.listeners[0]()\n    }\n  }\n})\n"],"sourceRoot":""}