{"version":3,"sources":["../../src/mixins/translatable.ts"],"names":[],"mappings":";;;;;;;;;;;;kBAEe,cAAI,MAAJ,CAAW;AACxB,UAAM,cADkB;AAGxB,WAAO;AACL,gBAAQ;AADH,KAHiB;AAOxB,UAAM;AAAA,eAAO;AACX,sBAAU,CADC;AAEX,0BAAc,CAFH;AAGX,6BAAiB,CAHN;AAIX,0BAAc,CAJH;AAKX,0BAAc;AALH,SAAP;AAAA,KAPkB;AAexB,cAAU;AACR,iBADQ,uBACC;AACP,mBAAO,KAAK,SAAL,EAAP;AACD;AAHO,KAfc;AAqBxB,iBArBwB,2BAqBX;AACX,eAAO,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,SAA1C,EAAqD,KAArD;AACA,eAAO,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,SAA1C,EAAqD,KAArD;AACD,KAxBuB;;AA0BxB,aAAS;AACP,sBADO,4BACO;AACZ,iBAAK,YAAL,GAAoB,KAAK,SAAL,GAAiB,KAAK,MAA1C;AACA,iBAAK,YAAL,GAAoB,OAAO,WAA3B;AACA,iBAAK,YAAL,GAAoB,OAAO,WAAP,GAAqB,KAAK,YAA9C;AACD,SALM;AAMP,iBANO,uBAME;AACP,mBAAO,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,SAAvC,EAAkD,KAAlD;AACA,mBAAO,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,SAAvC,EAAkD,KAAlD;AACD,SATM;;AAUP;AACA,iBAXO,uBAWE;AACP,kBAAM,IAAI,KAAJ,CAAU,mBAAV,CAAN;AACD,SAbM;AAcP,iBAdO,uBAcE;AACP,iBAAK,cAAL;AAEA,iBAAK,eAAL,GACE,CAAC,KAAK,YAAL,GAAoB,KAAK,GAAL,CAAS,SAA9B,KACC,SAAS,KAAK,MAAd,IAAwB,KAAK,YAD9B,CADF;AAKA,iBAAK,QAAL,GAAgB,KAAK,KAAL,CAAW,KAAK,YAAL,GAAoB,KAAK,eAApC,CAAhB;AACD;AAvBM;AA1Be,CAAX,C","sourcesContent":["import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'translatable',\n\n  props: {\n    height: Number\n  },\n\n  data: () => ({\n    parallax: 0,\n    parallaxDist: 0,\n    percentScrolled: 0,\n    windowHeight: 0,\n    windowBottom: 0\n  }),\n\n  computed: {\n    imgHeight (): number {\n      return this.objHeight()\n    }\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('scroll', this.translate, false)\n    window.removeEventListener('resize', this.translate, false)\n  },\n\n  methods: {\n    calcDimensions () {\n      this.parallaxDist = this.imgHeight - this.height\n      this.windowHeight = window.innerHeight\n      this.windowBottom = window.pageYOffset + this.windowHeight\n    },\n    listeners () {\n      window.addEventListener('scroll', this.translate, false)\n      window.addEventListener('resize', this.translate, false)\n    },\n    /** @abstract **/\n    objHeight (): number {\n      throw new Error('Not implemented !')\n    },\n    translate () {\n      this.calcDimensions()\n\n      this.percentScrolled = (\n        (this.windowBottom - this.$el.offsetTop) /\n        (parseInt(this.height) + this.windowHeight)\n      )\n\n      this.parallax = Math.round(this.parallaxDist * this.percentScrolled)\n    }\n  }\n})\n"],"sourceRoot":""}