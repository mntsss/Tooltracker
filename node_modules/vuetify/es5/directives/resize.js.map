{"version":3,"sources":["../../src/directives/resize.ts"],"names":[],"mappings":";;;;;AAcA,SAAA,QAAA,CAAmB,EAAnB,EAA0C,OAA1C,EAAuE;AACrE,QAAM,WAAW,QAAQ,KAAzB;AACA,QAAM,UAAU,QAAQ,OAAR,IAAmB,EAAE,SAAS,IAAX,EAAnC;AAEA,WAAO,gBAAP,CAAwB,QAAxB,EAAkC,QAAlC,EAA4C,OAA5C;AACA,OAAG,SAAH,GAAe;AACb,0BADa;AAEb;AAFa,KAAf;AAKA,QAAI,CAAC,QAAQ,SAAT,IAAsB,CAAC,QAAQ,SAAR,CAAkB,KAA7C,EAAoD;AAClD;AACD;AACF;AAED,SAAA,MAAA,CAAiB,EAAjB,EAAsC;AAAA,wBACN,GAAG,SADG;AAAA,QAC5B,QAD4B,iBAC5B,QAD4B;AAAA,QAClB,OADkB,iBAClB,OADkB;;AAGpC,WAAO,mBAAP,CAA2B,QAA3B,EAAqC,QAArC,EAA+C,OAA/C;AACA,WAAO,GAAG,SAAV;AACD;kBAEc;AACb,UAAM,QADO;AAEb,sBAFa;AAGb;AAHa,C","sourcesContent":["import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ResizeHTMLElement extends HTMLElement {\n  _onResize: {\n    callback: () => void\n    options?: boolean | AddEventListenerOptions\n  }\n}\n\ninterface ResizeVNodeDirective extends VNodeDirective {\n  value: () => void\n  options?: boolean | AddEventListenerOptions\n}\n\nfunction inserted (el: ResizeHTMLElement, binding: ResizeVNodeDirective) {\n  const callback = binding.value\n  const options = binding.options || { passive: true }\n\n  window.addEventListener('resize', callback, options)\n  el._onResize = {\n    callback,\n    options\n  }\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback()\n  }\n}\n\nfunction unbind (el: ResizeHTMLElement) {\n  const { callback, options } = el._onResize\n\n  window.removeEventListener('resize', callback, options)\n  delete el._onResize\n}\n\nexport default {\n  name: 'resize',\n  inserted,\n  unbind\n}\n"],"sourceRoot":""}